<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Recoding</title>
    <link>https://lossong.github.io/</link>
    <description>Recent content on Recoding</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 23 Mar 2020 22:25:16 +0800</lastBuildDate>
    
	<atom:link href="https://lossong.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>About</title>
      <link>https://lossong.github.io/about/about/</link>
      <pubDate>Sun, 20 Aug 2017 21:38:52 +0800</pubDate>
      
      <guid>https://lossong.github.io/about/about/</guid>
      <description>Hugo is a static site engine written in Go.
Test Content It makes use of a variety of open source projects including:
 Cobra Viper J Walter Weatherman Cast  Learn more and contribute on GitHub.</description>
    </item>
    
    <item>
      <title>Algorithm</title>
      <link>https://lossong.github.io/post/2020/3/23/algorithm/</link>
      <pubDate>Mon, 23 Mar 2020 22:25:16 +0800</pubDate>
      
      <guid>https://lossong.github.io/post/2020/3/23/algorithm/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Java处理时间的方法</title>
      <link>https://lossong.github.io/post/2019/10/10/java%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E7%9A%84%E6%96%B9%E6%B3%95/</link>
      <pubDate>Thu, 10 Oct 2019 19:58:48 +0800</pubDate>
      
      <guid>https://lossong.github.io/post/2019/10/10/java%E5%A4%84%E7%90%86%E6%97%B6%E9%97%B4%E7%9A%84%E6%96%B9%E6%B3%95/</guid>
      <description>首先要提到的就是Date类了 作为一个工具类，Date类是Java中比较常用类了（尽管有些方法过期了），总结一下它的用法 1 2 3 4 5 6 7 8 9 10 11</description>
    </item>
    
    <item>
      <title>Database</title>
      <link>https://lossong.github.io/post/2019/10/10/database/</link>
      <pubDate>Thu, 10 Oct 2019 13:34:15 +0800</pubDate>
      
      <guid>https://lossong.github.io/post/2019/10/10/database/</guid>
      <description>数据库：按照某种数据结构对数据进行组织，存储和管理的容器。 如果没有数据库会存在的一些问题： Size 数据量限制 Ease of updating 难以维护 Accuracy 同时操作 Security 数据安全 Redundancy 数</description>
    </item>
    
    <item>
      <title>GitLearning</title>
      <link>https://lossong.github.io/post/2019/10/4/git/</link>
      <pubDate>Fri, 04 Oct 2019 03:17:37 +0800</pubDate>
      
      <guid>https://lossong.github.io/post/2019/10/4/git/</guid>
      <description>Git，分布式版本控制系统，代码的管理平台 基本指令 初始化仓库 git init 添加文件 git add &amp;lt;file&amp;gt;/&amp;lt;directory&amp;gt; 如 git add . 提交文件仓库(local) git commit -m &amp;quot;description 克隆仓库到本地 1 2 3</description>
    </item>
    
  </channel>
</rss>